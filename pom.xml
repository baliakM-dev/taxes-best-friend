<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
    # Maven project version
    -->
    <modelVersion>4.0.0</modelVersion>
    <!--
    # ===============================================================
    # SECTION 1: BASIC PROJECT COORDINATES (GAV)
    # Unic address of the project in the repository
    # ===============================================================
    -->
    <groupId>sk.taxesBestFriend</groupId>
    <artifactId>taxes-best-friend-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <!--
    # ===============================================================
    # SECTION 2: TYP OF PROJECT AND METADATA
    # ===============================================================
    # Name and description for better project identification
    -->
    <name>Taxes Best Friend - Parent</name>
    <description>Parent project for Taxes Best Friend.</description>

    <!--
    # THIS IS ONLY FOR PARENT PROJECTS
    -->
    <packaging>pom</packaging>
    <!--
    # ===============================================================
    # SECTION 3: CENTRAL CONFIGURATION (PROPERTIES, DEPENDENCY MANAGEMENT, PLUGIN MANAGEMENT)
    # ===============================================================
    # Central place to define versions, dependencies and plugins
    # used by all submodules (child projects).
    # This ensures consistency across all modules.
    -->
    <properties>
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.boot.version>3.5.6</spring.boot.version>
        <spring.cloud.version>2025.0.0</spring.cloud.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <spotless.version>2.43.0</spotless.version>
        <spotbugs.version>4.8.5.0</spotbugs.version>
        <jacoco.version>0.8.12</jacoco.version>
        <lombok.version>1.18.38</lombok.version>
        <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
        <springdoc-openapi.version>2.8.13</springdoc-openapi.version>
    </properties>

    <!--
    # ===============================================================
    # SECTION 4: LIST OF MODULES (MIKROSERVICES)
    # ===============================================================
    # List of all submodules (child projects) that are part of this multi-module project.
    -->
    <modules>
        <module>api-gateway</module>
        <module>user-service</module>
    </modules>

    <!--
    # ===============================================================
    # SECTION 5: DEPENDENCY MANAGEMENT
    # ===============================================================
    # Central place to define and manage versions of dependencies used across all modules.
    # This ensures that all modules use the same version of a dependency.
    -->
    <dependencyManagement>
        <dependencies>
            <!--   Imports a list of all compatible libraries for Spring Boot.  -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--   Imports a list of all compatible libraries for Spring Cloud.  -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.18.0</version> </dependency>
        </dependencies>
    </dependencyManagement>

    <!--
    # ===============================================================
    # SECTION 6: MANAGEMENT OF BUILD PLUGINS
    # ===============================================================
    # Central place to define and manage versions of build plugins used across all modules.
    -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!--    It checks the Java version, the Maven version, and most importantly, it solves "dependency hell" by preventing
                different modules from using different versions of the same library.    -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.4.1</version>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireJavaVersion>
                                        <version>${java.version}</version>
                                    </requireJavaVersion>
                                    <requireMavenVersion>
                                        <version>3.8.0</version>
                                    </requireMavenVersion>
                                    <dependencyConvergence/>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!--   Automatic code format check  -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.version}</version>
                    <configuration>
                        <java>
                            <googleJavaFormat>
                                <version>1.17.0</version>
                                <style>GOOGLE</style>
                            </googleJavaFormat>
                            <removeUnusedImports/>
                            <trimTrailingWhitespace/>
                            <endWithNewline/>
                        </java>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--It inspects your compiled code and looks for potential errors such as NullPointerException,
                infinite loops, misuse of collections, etc.-->
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--  It allows you to easily check for newer (and safer) versions for your dependencies.-->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.16.2</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <!--   After running the tests, it generates a report that shows you what percentage of your code -->
                <!--   (and which specific lines) was actually tested.-->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                    <generateBackupPoms>false</generateBackupPoms>
                </configuration>
            </plugin>
        </plugins>

    </build>

    <!--
    # ===============================================================
    # SECTION 7: EXTENDED REPOSITORIES
    # ===============================================================
    # Additional repositories for resolving dependencies and plugins.
    -->
    <repositories>
        <!--
        # Add repository for Spring Milestone releases.
        # Some Spring Cloud versions are only available as milestones.
        -->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!--
    # Add repository for Spring Milestone releases.
    # This section is specifically for plugins.
    -->
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>